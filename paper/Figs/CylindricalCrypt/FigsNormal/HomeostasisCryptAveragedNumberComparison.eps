%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Darwin 13.1.0 Darwin Kernel Version 13.1.0: Thu Jan 16 19:40:37 PST 2014; root:xnu-2422.90.20~2/RELEASE_X86_64 x86_64.
%%Title: FigsNormal/HomeostasisCryptAveragedNumberComparison.eps
%%CreationDate: 06/23/2014  15:57:50
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   206   324   393   469
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   206   324   393   469
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 4.16667 def
portraitMode 0858 1941 csm

    0   -16   780   607 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0  826  592 rf
2.08333 w
0 438 614 0 0 -438 133 495 4 MP
PP
-614 0 0 438 614 0 0 -438 133 495 5 MP stroke
1.38889 w
DO
SO
2.08333 w
0 sg
 133  495 mt  747  495 L
 133   57 mt  747   57 L
 133  495 mt  133   57 L
 747  495 mt  747   57 L
 133  495 mt  747  495 L
 133  495 mt  133   57 L
 133  495 mt  133  488 L
 133   57 mt  133   63 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 29.1667 FMSR

 125  534 mt 
(0) s
 235  495 mt  235  488 L
 235   57 mt  235   63 L
 227  534 mt 
(2) s
 337  495 mt  337  488 L
 337   57 mt  337   63 L
 329  534 mt 
(4) s
 440  495 mt  440  488 L
 440   57 mt  440   63 L
 432  534 mt 
(6) s
 542  495 mt  542  488 L
 542   57 mt  542   63 L
 534  534 mt 
(8) s
 644  495 mt  644  488 L
 644   57 mt  644   63 L
 628  534 mt 
(10) s
 747  495 mt  747  488 L
 747   57 mt  747   63 L
 731  534 mt 
(12) s
 133  495 mt  139  495 L
 747  495 mt  740  495 L
 105  505 mt 
(0) s
 133  385 mt  139  385 L
 747  385 mt  740  385 L
  65  395 mt 
(0.05) s
 133  276 mt  139  276 L
 747  276 mt  740  276 L
  81  286 mt 
(0.1) s
 133  166 mt  139  166 L
 747  166 mt  740  166 L
  65  176 mt 
(0.15) s
 133   57 mt  139   57 L
 747   57 mt  740   57 L
  81   67 mt 
(0.2) s
 133  495 mt  747  495 L
 133   57 mt  747   57 L
 133  495 mt  133   57 L
 747  495 mt  747   57 L
gs 133 57 615 439 rc
3.33333 w
51 2 51 -1 52 1 51 3 51 1 51 1 51 4 51 1 
52 5 51 19 51 -15 158 301 12 MP stroke
DA
51 72 51 6 52 5 51 2 51 2 51 0 51 0 51 1 
52 -4 51 -9 51 156 158 169 12 MP stroke
DD
51 81 51 3 52 2 51 4 51 4 51 5 51 -1 51 -8 
52 -9 51 -7 51 212 158 123 12 MP stroke
DO
51 -15 51 7 52 4 51 4 51 4 51 3 51 4 51 5 
52 2 51 20 51 -11 158 293 12 MP stroke
gr

3.33333 w
DO
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 37.5 FMSR

 430  581 mt 
(y) s
  37  528 mt  -90 rotate
(Proportion of total cell number) s
90 rotate
 171   34 mt 
(Averaged Cell Numbers: Normal) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 41.6667 FMSR

 127  511 mt 
( ) s
 742   72 mt 
( ) s
SO
2.08333 w
1 sg
0 163 259 0 0 -163 468 241 4 MP
PP
-259 0 0 163 259 0 0 -163 468 241 5 MP stroke
1.38889 w
DO
SO
2.08333 w
0 sg
 468  241 mt  727  241 L
 468   78 mt  727   78 L
 468  241 mt  468   78 L
 727  241 mt  727   78 L
 468  241 mt  727  241 L
 468  241 mt  468   78 L
 468  241 mt  727  241 L
 468   78 mt  727   78 L
 468  241 mt  468   78 L
 727  241 mt  727   78 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 29.1667 FMSR

 622  114 mt 
(Vertex) s
gs 468 78 260 164 rc
3.33333 w
118 0 491 103 2 MP stroke
gr

3.33333 w
 622  152 mt 
(Mesh) s
gs 468 78 260 164 rc
DA
118 0 491 140 2 MP stroke
SO
gr

 622  190 mt 
(Node) s
gs 468 78 260 164 rc
DD
118 0 491 178 2 MP stroke
SO
gr

 622  228 mt 
(Potts) s
gs 468 78 260 164 rc
DO
118 0 491 215 2 MP stroke
SO
2.08333 w
gr

2.08333 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
